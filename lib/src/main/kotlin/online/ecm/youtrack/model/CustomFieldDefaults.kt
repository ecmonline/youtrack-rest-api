/**
 * YouTrack REST API
 *
 * YouTrack issue tracking and project management system
 *
 * The version of the OpenAPI document: 2021.3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package online.ecm.youtrack.model

import online.ecm.youtrack.model.CustomField

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonSubTypes
import com.fasterxml.jackson.annotation.JsonTypeInfo

/**
 * Represents default project-related settings of the custom field. These settings are applied at the moment when the custom field is attached to a project. After that, any changes in default settings do not affect the field settings for this project.
 *
 * @param canBeEmpty 
 * @param emptyFieldText 
 * @param isPublic 
 * @param parent 
 * @param id 
 * @param dollarType 
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "\$type", visible = true)
@JsonSubTypes(
    JsonSubTypes.Type(value = BuildBundleCustomFieldDefaults::class, name = "BuildBundleCustomFieldDefaults"),
    JsonSubTypes.Type(value = BundleCustomFieldDefaults::class, name = "BundleCustomFieldDefaults"),
    JsonSubTypes.Type(value = EnumBundleCustomFieldDefaults::class, name = "EnumBundleCustomFieldDefaults"),
    JsonSubTypes.Type(value = OwnedBundleCustomFieldDefaults::class, name = "OwnedBundleCustomFieldDefaults"),
    JsonSubTypes.Type(value = StateBundleCustomFieldDefaults::class, name = "StateBundleCustomFieldDefaults"),
    JsonSubTypes.Type(value = UserCustomFieldDefaults::class, name = "UserCustomFieldDefaults"),
    JsonSubTypes.Type(value = VersionBundleCustomFieldDefaults::class, name = "VersionBundleCustomFieldDefaults")
)
open class CustomFieldDefaults (

    @get:JsonProperty("canBeEmpty")
    open val canBeEmpty: kotlin.Boolean? = null,
    @get:JsonProperty("emptyFieldText")
    open val emptyFieldText: kotlin.String? = null,
    @get:JsonProperty("isPublic")
    open val isPublic: kotlin.Boolean? = null,
    @get:JsonProperty("parent")
    open val parent: CustomField? = null,
    @get:JsonProperty("id")
    open val id: kotlin.String? = null,
    @get:JsonProperty("\$type")
    open val dollarType: kotlin.String? = null,
)

