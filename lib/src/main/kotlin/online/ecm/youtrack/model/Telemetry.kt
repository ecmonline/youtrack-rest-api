/**
 * YouTrack REST API
 *
 * YouTrack issue tracking and project management system
 *
 * The version of the OpenAPI document: 2021.3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package online.ecm.youtrack.model

import online.ecm.youtrack.model.OnlineUsers

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonSubTypes
import com.fasterxml.jackson.annotation.JsonTypeInfo

/**
 * Telemetry data of the YouTrack installation.
 *
 * @param installationFolder 
 * @param databaseLocation 
 * @param logsLocation 
 * @param availableProcessors 
 * @param availableMemory 
 * @param allocatedMemory 
 * @param usedMemory 
 * @param uptime 
 * @param startedTime 
 * @param databaseBackgroundThreads 
 * @param pendingAsyncJobs 
 * @param cachedResultsCountInDBQueriesCache 
 * @param databaseQueriesCacheHitRate 
 * @param blobStringsCacheHitRate 
 * @param totalTransactions 
 * @param transactionsPerSecond 
 * @param requestsPerSecond 
 * @param databaseSize 
 * @param fullDatabaseSize 
 * @param textIndexSize 
 * @param onlineUsers 
 * @param reportCalculatorThreads 
 * @param notificationAnalyzerThreads 
 * @param id 
 * @param dollarType 
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "\$type", visible = true)
@JsonSubTypes(
)
interface Telemetry {

    @get:JsonProperty("installationFolder")
    val installationFolder: kotlin.String?
    @get:JsonProperty("databaseLocation")
    val databaseLocation: kotlin.String?
    @get:JsonProperty("logsLocation")
    val logsLocation: kotlin.String?
    @get:JsonProperty("availableProcessors")
    val availableProcessors: kotlin.Int?
    @get:JsonProperty("availableMemory")
    val availableMemory: kotlin.String?
    @get:JsonProperty("allocatedMemory")
    val allocatedMemory: kotlin.String?
    @get:JsonProperty("usedMemory")
    val usedMemory: kotlin.String?
    @get:JsonProperty("uptime")
    val uptime: kotlin.String?
    @get:JsonProperty("startedTime")
    val startedTime: kotlin.Long?
    @get:JsonProperty("databaseBackgroundThreads")
    val databaseBackgroundThreads: kotlin.Int?
    @get:JsonProperty("pendingAsyncJobs")
    val pendingAsyncJobs: kotlin.Int?
    @get:JsonProperty("cachedResultsCountInDBQueriesCache")
    val cachedResultsCountInDBQueriesCache: kotlin.Int?
    @get:JsonProperty("databaseQueriesCacheHitRate")
    val databaseQueriesCacheHitRate: kotlin.String?
    @get:JsonProperty("blobStringsCacheHitRate")
    val blobStringsCacheHitRate: kotlin.String?
    @get:JsonProperty("totalTransactions")
    val totalTransactions: kotlin.Long?
    @get:JsonProperty("transactionsPerSecond")
    val transactionsPerSecond: kotlin.String?
    @get:JsonProperty("requestsPerSecond")
    val requestsPerSecond: kotlin.String?
    @get:JsonProperty("databaseSize")
    val databaseSize: kotlin.String?
    @get:JsonProperty("fullDatabaseSize")
    val fullDatabaseSize: kotlin.String?
    @get:JsonProperty("textIndexSize")
    val textIndexSize: kotlin.String?
    @get:JsonProperty("onlineUsers")
    val onlineUsers: OnlineUsers?
    @get:JsonProperty("reportCalculatorThreads")
    val reportCalculatorThreads: kotlin.Int?
    @get:JsonProperty("notificationAnalyzerThreads")
    val notificationAnalyzerThreads: kotlin.Int?
    @get:JsonProperty("id")
    val id: kotlin.String?
    @get:JsonProperty("\$type")
    val dollarType: kotlin.String?
}

