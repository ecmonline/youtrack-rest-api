/**
 * YouTrack REST API
 *
 * YouTrack issue tracking and project management system
 *
 * The version of the OpenAPI document: 2021.3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package online.ecm.youtrack.model


import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonSubTypes
import com.fasterxml.jackson.annotation.JsonTypeInfo

/**
 * 
 *
 * @param id 
 * @param dollarType 
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "\$type", visible = true)
@JsonSubTypes(
    JsonSubTypes.Type(value = DatabaseMultiValueIssueCustomField::class, name = "DatabaseMultiValueIssueCustomField"),
    JsonSubTypes.Type(value = DatabaseSingleValueIssueCustomField::class, name = "DatabaseSingleValueIssueCustomField"),
    JsonSubTypes.Type(value = DateIssueCustomField::class, name = "DateIssueCustomField"),
    JsonSubTypes.Type(value = MultiBuildIssueCustomField::class, name = "MultiBuildIssueCustomField"),
    JsonSubTypes.Type(value = MultiEnumIssueCustomField::class, name = "MultiEnumIssueCustomField"),
    JsonSubTypes.Type(value = MultiGroupIssueCustomField::class, name = "MultiGroupIssueCustomField"),
    JsonSubTypes.Type(value = MultiOwnedIssueCustomField::class, name = "MultiOwnedIssueCustomField"),
    JsonSubTypes.Type(value = MultiUserIssueCustomField::class, name = "MultiUserIssueCustomField"),
    JsonSubTypes.Type(value = MultiVersionIssueCustomField::class, name = "MultiVersionIssueCustomField"),
    JsonSubTypes.Type(value = PeriodIssueCustomField::class, name = "PeriodIssueCustomField"),
    JsonSubTypes.Type(value = SimpleIssueCustomField::class, name = "SimpleIssueCustomField"),
    JsonSubTypes.Type(value = SingleBuildIssueCustomField::class, name = "SingleBuildIssueCustomField"),
    JsonSubTypes.Type(value = SingleEnumIssueCustomField::class, name = "SingleEnumIssueCustomField"),
    JsonSubTypes.Type(value = SingleGroupIssueCustomField::class, name = "SingleGroupIssueCustomField"),
    JsonSubTypes.Type(value = SingleOwnedIssueCustomField::class, name = "SingleOwnedIssueCustomField"),
    JsonSubTypes.Type(value = SingleUserIssueCustomField::class, name = "SingleUserIssueCustomField"),
    JsonSubTypes.Type(value = SingleVersionIssueCustomField::class, name = "SingleVersionIssueCustomField"),
    JsonSubTypes.Type(value = StateIssueCustomField::class, name = "StateIssueCustomField"),
    JsonSubTypes.Type(value = TextIssueCustomField::class, name = "TextIssueCustomField")
)
open class IssueCustomField (

    @get:JsonProperty("id")
    open val id: kotlin.String? = null,
    @get:JsonProperty("\$type")
    open val dollarType: kotlin.String? = null,
)

