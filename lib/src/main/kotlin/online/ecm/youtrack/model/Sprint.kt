/**
 * YouTrack REST API
 *
 * YouTrack issue tracking and project management system
 *
 * The version of the OpenAPI document: 2021.3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package online.ecm.youtrack.model

import online.ecm.youtrack.model.Agile
import online.ecm.youtrack.model.Issue

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonSubTypes
import com.fasterxml.jackson.annotation.JsonTypeInfo

/**
 * Represents a sprint that is associated with an agile board. Each sprint can include issues from one or more projects.
 *
 * @param agile 
 * @param name 
 * @param goal 
 * @param start 
 * @param finish 
 * @param archived 
 * @param isDefault 
 * @param issues 
 * @param unresolvedIssuesCount 
 * @param previousSprint 
 * @param id 
 * @param dollarType 
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "\$type", visible = true)
@JsonSubTypes(
)
open class Sprint (

    @get:JsonProperty("agile")
    val agile: Agile? = null,
    @get:JsonProperty("name")
    val name: kotlin.String? = null,
    @get:JsonProperty("goal")
    val goal: kotlin.String? = null,
    @get:JsonProperty("start")
    val start: kotlin.Long? = null,
    @get:JsonProperty("finish")
    val finish: kotlin.Long? = null,
    @get:JsonProperty("archived")
    val archived: kotlin.Boolean? = null,
    @get:JsonProperty("isDefault")
    val isDefault: kotlin.Boolean? = null,
    @get:JsonProperty("issues")
    val issues: kotlin.collections.List<Issue>? = null,
    @get:JsonProperty("unresolvedIssuesCount")
    val unresolvedIssuesCount: kotlin.Int? = null,
    @get:JsonProperty("previousSprint")
    val previousSprint: Sprint? = null,
    @get:JsonProperty("id")
    val id: kotlin.String? = null,
    @get:JsonProperty("\$type")
    val dollarType: kotlin.String? = null,
)

