/**
 * YouTrack REST API
 *
 * YouTrack issue tracking and project management system
 *
 * The version of the OpenAPI document: 2021.3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package online.ecm.youtrack.model

import com.fasterxml.jackson.annotation.JsonInclude
import online.ecm.youtrack.model.Issue
import online.ecm.youtrack.model.IssueAttachment
import online.ecm.youtrack.model.User
import online.ecm.youtrack.model.Visibility

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonSubTypes
import com.fasterxml.jackson.annotation.JsonTypeInfo

/**
 * Represents an existing issue comment.
 *
 * @param text 
 * @param usesMarkdown 
 * @param textPreview 
 * @param created 
 * @param updated 
 * @param author 
 * @param issue 
 * @param attachments 
 * @param visibility 
 * @param deleted 
 * @param id 
 * @param dollarType 
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "\$type", visible = true)
@JsonSubTypes(
)
open class IssueComment (

    @get:JsonProperty("text")
    val text: kotlin.String? = null,
    @get:JsonProperty("usesMarkdown")
    val usesMarkdown: kotlin.Boolean? = null,
    @get:JsonProperty("textPreview")
    @get:JsonInclude(JsonInclude.Include.NON_NULL)
    val textPreview: kotlin.String? = null,
    @get:JsonProperty("created")
    @get:JsonInclude(JsonInclude.Include.NON_NULL)
    val created: kotlin.Long? = null,
    @get:JsonProperty("updated")
    @get:JsonInclude(JsonInclude.Include.NON_NULL)
    val updated: kotlin.Long? = null,
    @get:JsonProperty("author")
    @get:JsonInclude(JsonInclude.Include.NON_NULL)
    val author: User? = null,
    @get:JsonProperty("issue")
    @get:JsonInclude(JsonInclude.Include.NON_NULL)
    val issue: Issue? = null,
    @get:JsonProperty("attachments")
    val attachments: kotlin.collections.List<IssueAttachment>? = null,
    @get:JsonProperty("visibility")
    val visibility: Visibility? = null,
    @get:JsonProperty("deleted")
    val deleted: kotlin.Boolean? = null,
    @get:JsonProperty("id")
    val id: kotlin.String? = null,
    @get:JsonProperty("\$type")
    val dollarType: kotlin.String? = null,
)

